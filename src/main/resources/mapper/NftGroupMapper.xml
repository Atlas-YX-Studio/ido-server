<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bixin.nft.core.mapper.NftGroupMapper">
  <resultMap id="BaseResultMap" type="com.bixin.nft.bean.DO.NftGroupDo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="series" jdbcType="VARCHAR" property="series" />
    <result column="series_name" jdbcType="VARCHAR" property="seriesName" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="series_quantity" jdbcType="INTEGER" property="seriesQuantity" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="offering_quantity" jdbcType="INTEGER" property="offeringQuantity" />
    <result column="box_token" jdbcType="VARCHAR" property="boxToken" />
    <result column="box_token_precision" jdbcType="INTEGER" property="boxTokenPrecision" />
    <result column="box_token_logo" jdbcType="VARCHAR" property="boxTokenLogo" />
    <result column="pay_token" jdbcType="VARCHAR" property="payToken" />
    <result column="pay_token_precision" jdbcType="INTEGER" property="payTokenPrecision" />
    <result column="nft_meta" jdbcType="VARCHAR" property="nftMeta" />
    <result column="nft_body" jdbcType="VARCHAR" property="nftBody" />
    <result column="nft_type_info" jdbcType="VARCHAR" property="nftTypeInfo" />
    <result column="nft_type_image_link" jdbcType="VARCHAR" property="nftTypeImageLink" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="owner" jdbcType="VARCHAR" property="owner" />
    <result column="selling_price" jdbcType="INTEGER" property="sellingPrice" />
    <result column="selling_time" jdbcType="BIGINT" property="sellingTime" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <result column="offering" jdbcType="BIT" property="offering" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.bixin.nft.bean.DO.NftGroupDo">
    <result column="support_token" jdbcType="LONGVARCHAR" property="supportToken" />
    <result column="nft_type_image_data" jdbcType="LONGVARCHAR" property="nftTypeImageData" />
    <result column="cn_description" jdbcType="LONGVARCHAR" property="cnDescription" />
    <result column="en_description" jdbcType="LONGVARCHAR" property="enDescription" />
    <result column="cn_rule_desc" jdbcType="LONGVARCHAR" property="cnRuleDesc" />
    <result column="en_rule_desc" jdbcType="LONGVARCHAR" property="enRuleDesc" />
    <result column="cn_creator_desc" jdbcType="LONGVARCHAR" property="cnCreatorDesc" />
    <result column="en_creator_desc" jdbcType="LONGVARCHAR" property="enCreatorDesc" />
  </resultMap>
  <sql id="Base_Column_List">
    id, series, series_name, name, series_quantity, quantity, offering_quantity, box_token,
    box_token_precision, box_token_logo, pay_token, pay_token_precision, nft_meta, nft_body,
    nft_type_info, nft_type_image_link, creator, owner, selling_price, selling_time,
    enabled, offering, status, create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    support_token, nft_type_image_data, cn_description, en_description, cn_rule_desc,
    en_rule_desc, cn_creator_desc, en_creator_desc
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from nft_group
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from nft_group
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.bixin.nft.bean.DO.NftGroupDo" useGeneratedKeys="true">
    insert into nft_group (id, series, series_name,
                           name, series_quantity, quantity,
                           offering_quantity, box_token, box_token_precision,
                           box_token_logo, pay_token, pay_token_precision,
                           nft_meta, nft_body, nft_type_info,
                           nft_type_image_link, creator, owner,
                           selling_price, selling_time, enabled,
                           offering, status, create_time,
                           update_time, support_token, nft_type_image_data,
                           cn_description, en_description, cn_rule_desc,
                           en_rule_desc, cn_creator_desc, en_creator_desc
    )
    values (#{id,jdbcType=BIGINT}, #{series,jdbcType=VARCHAR}, #{seriesName,jdbcType=VARCHAR},
            #{name,jdbcType=VARCHAR}, #{seriesQuantity,jdbcType=INTEGER}, #{quantity,jdbcType=INTEGER},
            #{offeringQuantity,jdbcType=INTEGER}, #{boxToken,jdbcType=VARCHAR}, #{boxTokenPrecision,jdbcType=INTEGER},
            #{boxTokenLogo,jdbcType=VARCHAR}, #{payToken,jdbcType=VARCHAR}, #{payTokenPrecision,jdbcType=INTEGER},
            #{nftMeta,jdbcType=VARCHAR}, #{nftBody,jdbcType=VARCHAR}, #{nftTypeInfo,jdbcType=VARCHAR},
            #{nftTypeImageLink,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, #{owner,jdbcType=VARCHAR},
            #{sellingPrice,jdbcType=INTEGER}, #{sellingTime,jdbcType=BIGINT}, #{enabled,jdbcType=BIT},
            #{offering,jdbcType=BIT}, #{status,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT},
            #{updateTime,jdbcType=BIGINT}, #{supportToken,jdbcType=LONGVARCHAR}, #{nftTypeImageData,jdbcType=LONGVARCHAR},
            #{cnDescription,jdbcType=LONGVARCHAR}, #{enDescription,jdbcType=LONGVARCHAR}, #{cnRuleDesc,jdbcType=LONGVARCHAR},
            #{enRuleDesc,jdbcType=LONGVARCHAR}, #{cnCreatorDesc,jdbcType=LONGVARCHAR}, #{enCreatorDesc,jdbcType=LONGVARCHAR}
           )
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bixin.nft.bean.DO.NftGroupDo">
    update nft_group
    <set>
      <if test="series != null">
        series = #{series,jdbcType=VARCHAR},
      </if>
      <if test="seriesName != null">
        series_name = #{seriesName,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="seriesQuantity != null">
        series_quantity = #{seriesQuantity,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="offeringQuantity != null">
        offering_quantity = #{offeringQuantity,jdbcType=INTEGER},
      </if>
      <if test="boxToken != null">
        box_token = #{boxToken,jdbcType=VARCHAR},
      </if>
      <if test="boxTokenPrecision != null">
        box_token_precision = #{boxTokenPrecision,jdbcType=INTEGER},
      </if>
      <if test="boxTokenLogo != null">
        box_token_logo = #{boxTokenLogo,jdbcType=VARCHAR},
      </if>
      <if test="payToken != null">
        pay_token = #{payToken,jdbcType=VARCHAR},
      </if>
      <if test="payTokenPrecision != null">
        pay_token_precision = #{payTokenPrecision,jdbcType=INTEGER},
      </if>
      <if test="nftMeta != null">
        nft_meta = #{nftMeta,jdbcType=VARCHAR},
      </if>
      <if test="nftBody != null">
        nft_body = #{nftBody,jdbcType=VARCHAR},
      </if>
      <if test="nftTypeInfo != null">
        nft_type_info = #{nftTypeInfo,jdbcType=VARCHAR},
      </if>
      <if test="nftTypeImageLink != null">
        nft_type_image_link = #{nftTypeImageLink,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="owner != null">
        owner = #{owner,jdbcType=VARCHAR},
      </if>
      <if test="sellingPrice != null">
        selling_price = #{sellingPrice,jdbcType=INTEGER},
      </if>
      <if test="sellingTime != null">
        selling_time = #{sellingTime,jdbcType=BIGINT},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="offering != null">
        offering = #{offering,jdbcType=BIT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="supportToken != null">
        support_token = #{supportToken,jdbcType=LONGVARCHAR},
      </if>
      <if test="nftTypeImageData != null">
        nft_type_image_data = #{nftTypeImageData,jdbcType=LONGVARCHAR},
      </if>
      <if test="cnDescription != null">
        cn_description = #{cnDescription,jdbcType=LONGVARCHAR},
      </if>
      <if test="enDescription != null">
        en_description = #{enDescription,jdbcType=LONGVARCHAR},
      </if>
      <if test="cnRuleDesc != null">
        cn_rule_desc = #{cnRuleDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="enRuleDesc != null">
        en_rule_desc = #{enRuleDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="cnCreatorDesc != null">
        cn_creator_desc = #{cnCreatorDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="enCreatorDesc != null">
        en_creator_desc = #{enCreatorDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bixin.nft.bean.DO.NftGroupDo">
    update nft_group
    set series = #{series,jdbcType=VARCHAR},
        series_name = #{seriesName,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        series_quantity = #{seriesQuantity,jdbcType=INTEGER},
        quantity = #{quantity,jdbcType=INTEGER},
        offering_quantity = #{offeringQuantity,jdbcType=INTEGER},
        box_token = #{boxToken,jdbcType=VARCHAR},
        box_token_precision = #{boxTokenPrecision,jdbcType=INTEGER},
        box_token_logo = #{boxTokenLogo,jdbcType=VARCHAR},
        pay_token = #{payToken,jdbcType=VARCHAR},
        pay_token_precision = #{payTokenPrecision,jdbcType=INTEGER},
        nft_meta = #{nftMeta,jdbcType=VARCHAR},
        nft_body = #{nftBody,jdbcType=VARCHAR},
        nft_type_info = #{nftTypeInfo,jdbcType=VARCHAR},
        nft_type_image_link = #{nftTypeImageLink,jdbcType=VARCHAR},
        creator = #{creator,jdbcType=VARCHAR},
        owner = #{owner,jdbcType=VARCHAR},
        selling_price = #{sellingPrice,jdbcType=INTEGER},
        selling_time = #{sellingTime,jdbcType=BIGINT},
        enabled = #{enabled,jdbcType=BIT},
        offering = #{offering,jdbcType=BIT},
        status = #{status,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=BIGINT},
        update_time = #{updateTime,jdbcType=BIGINT},
        support_token = #{supportToken,jdbcType=LONGVARCHAR},
        nft_type_image_data = #{nftTypeImageData,jdbcType=LONGVARCHAR},
        cn_description = #{cnDescription,jdbcType=LONGVARCHAR},
        en_description = #{enDescription,jdbcType=LONGVARCHAR},
        cn_rule_desc = #{cnRuleDesc,jdbcType=LONGVARCHAR},
        en_rule_desc = #{enRuleDesc,jdbcType=LONGVARCHAR},
        cn_creator_desc = #{cnCreatorDesc,jdbcType=LONGVARCHAR},
        en_creator_desc = #{enCreatorDesc,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <sql id="baseQuery">
    <trim prefix="WHERE" prefixOverrides="AND | OR">
      <if test="null != id">
        and id = #{id,jdbcType=BIGINT}
      </if>
      <if test="null != series">
        and series = #{series,jdbcType=VARCHAR}
      </if>
      <if test="null != seriesName">
        and series_name = #{seriesName,jdbcType=VARCHAR}
      </if>
      <if test="null != name">
        and name = #{name,jdbcType=VARCHAR}
      </if>
      <if test="null != seriesQuantity">
        and series_quantity = #{seriesQuantity,jdbcType=INTEGER}
      </if>
      <if test="null != quantity">
        and quantity = #{quantity,jdbcType=INTEGER}
      </if>
      <if test="null != offeringQuantity">
        and offering_quantity = #{offeringQuantity,jdbcType=INTEGER}
      </if>
      <if test="null != boxToken">
        and box_token = #{boxToken,jdbcType=VARCHAR}
      </if>
      <if test="null != boxTokenPrecision">
        and box_token_precision = #{boxTokenPrecision,jdbcType=INTEGER}
      </if>
      <if test="null != boxTokenLogo">
        and box_token_logo = #{boxTokenLogo,jdbcType=VARCHAR}
      </if>
      <if test="null != payToken">
        and pay_token = #{payToken,jdbcType=VARCHAR}
      </if>
      <if test="null != payTokenPrecision">
        and pay_token_precision = #{payTokenPrecision,jdbcType=INTEGER}
      </if>
      <if test="null != nftMeta">
        and nft_meta = #{nftMeta,jdbcType=VARCHAR}
      </if>
      <if test="null != nftBody">
        and nft_body = #{nftBody,jdbcType=VARCHAR}
      </if>
      <if test="null != nftTypeInfo">
        and nft_type_info = #{nftTypeInfo,jdbcType=VARCHAR}
      </if>
      <if test="null != nftTypeImageLink">
        and nft_type_image_link = #{nftTypeImageLink,jdbcType=VARCHAR}
      </if>
      <if test="null != creator">
        and creator = #{creator,jdbcType=VARCHAR}
      </if>
      <if test="null != owner">
        and owner = #{owner,jdbcType=VARCHAR}
      </if>
      <if test="null != sellingPrice">
        and selling_price = #{sellingPrice,jdbcType=INTEGER}
      </if>
      <if test="null != sellingTime">
        and selling_time = #{sellingTime,jdbcType=BIGINT}
      </if>
      <if test="null != enabled">
        and enabled = #{enabled,jdbcType=BIT}
      </if>
      <if test="null != offering">
        and offering = #{offering,jdbcType=BIT}
      </if>
      <if test="null != status">
        and status = #{status,jdbcType=VARCHAR}
      </if>
      <if test="null != createTime">
        and create_time = #{createTime,jdbcType=BIGINT}
      </if>
      <if test="null != updateTime">
        and update_time = #{updateTime,jdbcType=BIGINT}
      </if>
      <if test="null != supportToken">
        and support_token = #{supportToken,jdbcType=LONGVARCHAR}
      </if>
      <if test="null != nftTypeImageData">
        and nft_type_image_data = #{nftTypeImageData,jdbcType=LONGVARCHAR}
      </if>
      <if test="null != cnDescription">
        and cn_description = #{cnDescription,jdbcType=LONGVARCHAR}
      </if>
      <if test="null != enDescription">
        and en_description = #{enDescription,jdbcType=LONGVARCHAR}
      </if>
      <if test="null != cnRuleDesc">
        and cn_rule_desc = #{cnRuleDesc,jdbcType=LONGVARCHAR}
      </if>
      <if test="null != enRuleDesc">
        and en_rule_desc = #{enRuleDesc,jdbcType=LONGVARCHAR}
      </if>
      <if test="null != cnCreatorDesc">
        and cn_creator_desc = #{cnCreatorDesc,jdbcType=LONGVARCHAR}
      </if>
      <if test="null != enCreatorDesc">
        and en_creator_desc = #{enCreatorDesc,jdbcType=LONGVARCHAR}
      </if>
    </trim>
  </sql>
  <select id="selectByPrimaryKeySelective" parameterType="com.bixin.nft.bean.DO.NftGroupDo" resultMap="BaseResultMap">
    select  * from nft_group
    <include refid="baseQuery" />
  </select>
  <select id="selectByPrimaryKeySelectiveList" parameterType="com.bixin.nft.bean.DO.NftGroupDo" resultMap="BaseResultMap">
    select  * from nft_group
    <include refid="baseQuery" />
  </select>
  <select id="offering" parameterType="java.lang.Boolean" resultMap="BaseResultMap">
    select  * from nft_group where offering = #{offering} limit 1
  </select>
  <select id="getListByEnabled" parameterType="java.lang.Boolean" resultMap="BaseResultMap">
    select  * from nft_group where enabled = #{enabled}
  </select>
</mapper>