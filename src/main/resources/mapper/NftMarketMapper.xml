<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bixin.nft.core.mapper.NftMarketMapper">
  <resultMap id="BaseResultMap" type="com.bixin.nft.bean.DO.NftMarketDo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="chain_id" jdbcType="BIGINT" property="chainId" />
    <result column="nft_box_id" jdbcType="BIGINT" property="nftBoxId" />
    <result column="group_id" jdbcType="BIGINT" property="groupId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="owner" jdbcType="VARCHAR" property="owner" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="pay_token" jdbcType="VARCHAR" property="payToken" />
    <result column="sell_price" jdbcType="DECIMAL" property="sellPrice" />
    <result column="offer_price" jdbcType="DECIMAL" property="offerPrice" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, chain_id, nft_box_id, group_id, type, name, owner, pay_token, address, sell_price, offer_price, icon,
    create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from nft_market
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPage" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from nft_market
    where 1=1
    <if test="groupId != null">
       and group_id = #{groupId}
    </if>
    <if test="payToken != null">
      and pay_token = #{payToken}
    </if>
    <if test="type != null">
      and type = #{type}
    </if>
    order by
    <if test="sort != null">
      ${sort}
    </if>
    <if test="order != null">
      ${order}
    </if>
    <if test="pageFrom != null and pageSize !=null">
      limit #{pageFrom},#{pageSize}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from nft_market
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteAll" >
    delete from nft_market
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.bixin.nft.bean.DO.NftMarketDo" useGeneratedKeys="true">
    insert into nft_market (id, chain_id, nft_box_id, group_id,
      type, name, owner, pay_token,
      address, sell_price, offer_price, 
      icon, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{chainId,jdbcType=BIGINT}, #{nftBoxId,jdbcType=BIGINT}, #{groupId,jdbcType=BIGINT},
            #{type,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{owner,jdbcType=VARCHAR}, #{payToken,jdbcType=VARCHAR},
      #{address,jdbcType=VARCHAR}, #{sellPrice,jdbcType=DECIMAL}, #{offerPrice,jdbcType=DECIMAL}, 
      #{icon,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}
      )
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bixin.nft.bean.DO.NftMarketDo">
    update nft_market
    <set>
      <if test="chainId != null">
        chain_id = #{chainId,jdbcType=BIGINT},
      </if>
      <if test="nftBoxId != null">
        nft_box_id = #{nftBoxId,jdbcType=BIGINT},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="owner != null">
        owner = #{owner,jdbcType=VARCHAR},
      </if>
      <if test="payToken != null">
        payToken = #{payToken,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="sellPrice != null">
        sell_price = #{sellPrice,jdbcType=DECIMAL},
      </if>
      <if test="offerPrice != null">
        offer_price = #{offerPrice,jdbcType=DECIMAL},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <sql id="baseQuery">
    <trim prefix="WHERE" prefixOverrides="AND | OR">
      <if test="null != id">
         and id = #{id,jdbcType=BIGINT}
      </if>
      <if test="null != chainId">
         and chain_id = #{chainId,jdbcType=BIGINT}
      </if>
      <if test="null != nftBoxId">
         and nft_box_id = #{nftBoxId,jdbcType=BIGINT}
      </if>
      <if test="groupId != null">
         and group_id = #{groupId,jdbcType=BIGINT}
      </if>
      <if test="null != type">
         and type = #{type,jdbcType=VARCHAR}
      </if>
      <if test="null != name">
         and name = #{name,jdbcType=VARCHAR}
      </if>
      <if test="null != owner">
         and owner = #{owner,jdbcType=VARCHAR}
      </if>
      <if test="payToken != null">
         and payToken = #{payToken,jdbcType=VARCHAR}
      </if>
      <if test="null != address">
         and address = #{address,jdbcType=VARCHAR}
      </if>
      <if test="null != sellPrice">
         and sell_price = #{sellPrice,jdbcType=DECIMAL}
      </if>
      <if test="null != offerPrice">
         and offer_price = #{offerPrice,jdbcType=DECIMAL}
      </if>
      <if test="null != icon">
         and icon = #{icon,jdbcType=VARCHAR}
      </if>
      <if test="null != createTime">
         and create_time = #{createTime,jdbcType=BIGINT}
      </if>
      <if test="null != updateTime">
         and update_time = #{updateTime,jdbcType=BIGINT}
      </if>
    </trim>
  </sql>
  <select id="selectByPrimaryKeySelective" parameterType="com.bixin.nft.bean.DO.NftMarketDo" resultMap="BaseResultMap">
    select  * from nft_market
    <include refid="baseQuery" />
  </select>
  <select id="selectByPrimaryKeySelectiveList" parameterType="com.bixin.nft.bean.DO.NftMarketDo" resultMap="BaseResultMap">
    select  * from nft_market
    <include refid="baseQuery" />
  </select>
</mapper>