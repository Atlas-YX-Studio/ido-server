<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bixin.ido.server.core.mapper.LiquidityPoolMapper">
  <resultMap id="BaseResultMap" type="com.bixin.ido.server.bean.DO.LiquidityPool">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="userAddress" jdbcType="VARCHAR" property="userAddress" />
    <result column="tokenCodeX" jdbcType="VARCHAR" property="tokenCodeX" />
    <result column="tokenCodeY" jdbcType="VARCHAR" property="tokenCodeY" />
    <result column="createTime" jdbcType="BIGINT" property="createTime" />
  </resultMap>
  <sql id="DDL_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_DDL_Where_Clause">
    <where>
      <foreach collection="DDL.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userAddress, tokenCodeX, tokenCodeY, createTime
  </sql>
  <select id="selectByDDL" parameterType="com.bixin.ido.server.core.wrapDDL.LiquidityPoolDDL" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from liquidity_pool
    <if test="_parameter != null">
      <include refid="DDL_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from liquidity_pool
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from liquidity_pool
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByDDL" parameterType="com.bixin.ido.server.core.wrapDDL.LiquidityPoolDDL">
    delete from liquidity_pool
    <if test="_parameter != null">
      <include refid="DDL_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bixin.ido.server.bean.DO.LiquidityPool">
    insert into liquidity_pool (id, userAddress, tokenCodeX, 
      tokenCodeY, createTime)
    values (#{id,jdbcType=BIGINT}, #{userAddress,jdbcType=VARCHAR}, #{tokenCodeX,jdbcType=VARCHAR}, 
      #{tokenCodeY,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.bixin.ido.server.bean.DO.LiquidityPool">
    insert into liquidity_pool
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userAddress != null">
        userAddress,
      </if>
      <if test="tokenCodeX != null">
        tokenCodeX,
      </if>
      <if test="tokenCodeY != null">
        tokenCodeY,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userAddress != null">
        #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="tokenCodeX != null">
        #{tokenCodeX,jdbcType=VARCHAR},
      </if>
      <if test="tokenCodeY != null">
        #{tokenCodeY,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByDDL" parameterType="com.bixin.ido.server.core.wrapDDL.LiquidityPoolDDL" resultType="java.lang.Long">
    select count(*) from liquidity_pool
    <if test="_parameter != null">
      <include refid="DDL_Where_Clause" />
    </if>
  </select>
  <update id="updateByDDLSelective" parameterType="map">
    update liquidity_pool
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userAddress != null">
        userAddress = #{record.userAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.tokenCodeX != null">
        tokenCodeX = #{record.tokenCodeX,jdbcType=VARCHAR},
      </if>
      <if test="record.tokenCodeY != null">
        tokenCodeY = #{record.tokenCodeY,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_DDL_Where_Clause" />
    </if>
  </update>
  <update id="updateByDDL" parameterType="map">
    update liquidity_pool
    set id = #{record.id,jdbcType=BIGINT},
      userAddress = #{record.userAddress,jdbcType=VARCHAR},
      tokenCodeX = #{record.tokenCodeX,jdbcType=VARCHAR},
      tokenCodeY = #{record.tokenCodeY,jdbcType=VARCHAR},
      createTime = #{record.createTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_DDL_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bixin.ido.server.bean.DO.LiquidityPool">
    update liquidity_pool
    <set>
      <if test="userAddress != null">
        userAddress = #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="tokenCodeX != null">
        tokenCodeX = #{tokenCodeX,jdbcType=VARCHAR},
      </if>
      <if test="tokenCodeY != null">
        tokenCodeY = #{tokenCodeY,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bixin.ido.server.bean.DO.LiquidityPool">
    update liquidity_pool
    set userAddress = #{userAddress,jdbcType=VARCHAR},
      tokenCodeX = #{tokenCodeX,jdbcType=VARCHAR},
      tokenCodeY = #{tokenCodeY,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>