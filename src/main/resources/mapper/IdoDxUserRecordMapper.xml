<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bixin.ido.server.core.mapper.IdoDxUserRecordMapper">
  <resultMap id="BaseResultMap" type="com.bixin.ido.server.bean.DO.IdoDxUserRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="prdId" jdbcType="BIGINT" property="prdId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="gasCost" jdbcType="DECIMAL" property="gasCost" />
    <result column="currency" jdbcType="VARCHAR" property="currency" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="createTime" jdbcType="BIGINT" property="createTime" />
    <result column="updateTime" jdbcType="BIGINT" property="updateTime" />
  </resultMap>
  <sql id="DDL_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_DDL_Where_Clause">
    <where>
      <foreach collection="DDL.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, prdId, address, amount, gasCost, currency, state, version, createTime,
    updateTime
  </sql>
  <select id="selectByDDL" parameterType="com.bixin.ido.server.core.wrapDDL.IdoDxUserRecordDDL" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ido_dx_user_record
    <if test="_parameter != null">
      <include refid="DDL_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ido_dx_user_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ido_dx_user_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByDDL" parameterType="com.bixin.ido.server.core.wrapDDL.IdoDxUserRecordDDL">
    delete from ido_dx_user_record
    <if test="_parameter != null">
      <include refid="DDL_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bixin.ido.server.bean.DO.IdoDxUserRecord">
    insert into ido_dx_user_record (id, prdId,
      address, amount, gasCost, 
      currency, state, version, 
      createTime, updateTime)
    values (#{id,jdbcType=BIGINT}, #{prdId,jdbcType=BIGINT},
      #{address,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, #{gasCost,jdbcType=DECIMAL}, 
      #{currency,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{version,jdbcType=INTEGER}, 
      #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.bixin.ido.server.bean.DO.IdoDxUserRecord">
    insert into ido_dx_user_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="prdId != null">
        prdId,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="gasCost != null">
        gasCost,
      </if>
      <if test="currency != null">
        currency,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="prdId != null">
        #{prdId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="gasCost != null">
        #{gasCost,jdbcType=DECIMAL},
      </if>
      <if test="currency != null">
        #{currency,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByDDL" parameterType="com.bixin.ido.server.core.wrapDDL.IdoDxUserRecordDDL" resultType="java.lang.Long">
    select count(*) from ido_dx_user_record
    <if test="_parameter != null">
      <include refid="DDL_Where_Clause" />
    </if>
  </select>
  <update id="updateByDDLSelective" parameterType="map">
    update ido_dx_user_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.prdId != null">
        prdId = #{record.prdId,jdbcType=BIGINT},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.gasCost != null">
        gasCost = #{record.gasCost,jdbcType=DECIMAL},
      </if>
      <if test="record.currency != null">
        currency = #{record.currency,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        updateTime = #{record.updateTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_DDL_Where_Clause" />
    </if>
  </update>
  <update id="updateByDDL" parameterType="map">
    update ido_dx_user_record
    set id = #{record.id,jdbcType=BIGINT},
      prdId = #{record.prdId,jdbcType=BIGINT},
      address = #{record.address,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DECIMAL},
      gasCost = #{record.gasCost,jdbcType=DECIMAL},
      currency = #{record.currency,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=INTEGER},
      createTime = #{record.createTime,jdbcType=BIGINT},
      updateTime = #{record.updateTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_DDL_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bixin.ido.server.bean.DO.IdoDxUserRecord">
    update ido_dx_user_record
    <set>
      <if test="prdId != null">
        prdId = #{prdId,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="gasCost != null">
        gasCost = #{gasCost,jdbcType=DECIMAL},
      </if>
      <if test="currency != null">
        currency = #{currency,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bixin.ido.server.bean.DO.IdoDxUserRecord">
    update ido_dx_user_record
    set prdId = #{prdId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      gasCost = #{gasCost,jdbcType=DECIMAL},
      currency = #{currency,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      version = #{version,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=BIGINT},
      updateTime = #{updateTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>